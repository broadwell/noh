$score-label-width: 9rem;
$score-cell-width: 2.5rem;
$score-channel-height: 1.5rem;
$score-channel-large-height: 3rem;

$grid-columns: 16;

// Generate grid

@mixin grid-column($n) {
  .cell--#{$n} {
    min-width: $score-cell-width * $n;
    width: 100% / $grid-columns * $n;
  }
}

@for $i from 1 through $grid-columns {
  @include grid-column($i);
}

// Styles

.score {
  background-color: $white;
  border-top: $tl-separator;
  width: 100%;
}

.measure {
  @include flex-container($justify: flex-start, $align: flex-start);
}

.measure__channel {
  height: $score-channel-height;

  @include flex-container($justify: flex-start);
}

.measure__channel--large {
  height: $score-channel-large-height;
}

.measure__label-container {
  border-right: $tl-separator;
  flex-basis: $score-label-width;
  flex-shrink: 0;

  .measure__channel {
    border-bottom: $tl-separator;
    font-size: $fs-sans-2xs;
    font-weight: $fw-bold;
    padding: 0 0.5rem;
    text-transform: uppercase;
  }
}

.measure__grid-container {
  flex-grow: 1;

  .measure__channel {
    font-size: $fs-sans-sm;
  }
}

.cell {
  border-bottom: $tl-separator;
  border-right: $tl-separator;
  height: $score-channel-height;
  padding: 0 0.25rem;

  @include flex-container($justify: flex-start);

  .measure__channel--large & {
    height: $score-channel-large-height;
  }
}

.measure--next,
.measure--prev {
  background-color: rgba($grey-lightest, 1);
  color: $black;

  .measure__label-container {
    border-bottom: $tl-separator;
    font-size: $fs-sans-2xs;
    font-weight: $fw-bold;
    height: $score-channel-height * 4 + $score-channel-large-height;
    padding: 0 0.5rem;
    text-transform: uppercase;

    @include flex-container($justify: center);
  }

  .cell {
  }
}

.measure--current {
  background-color: $white;
}
